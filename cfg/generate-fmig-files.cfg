################################################################## 
# smartmet-tools-grid : generateFmigFiles
##################################################################


# Importing global configuration parameters. There should be
# an environment variable SMARTMET_ENV_FILE that points to
# the global configuration file. The idea is that you can easily
# change your environment by editing this file. 

@ifdef SMARTMET_ENV_FILE
  @include "$(SMARTMET_ENV_FILE)"
@else
  @print "The environment variable 'SMARTMET_ENV_FILE' not defined!" @location
  @include "$(HOME)/workspace/smartmet-tools-grid/cfg/smartmet-dev-env.cfg"
@endif


# This information is needed for initializing the grid-library. 

smartmet.library.grid-files.configFile = "$(GRID_FILES_LIBRARY_CONFIG_FILE)"


smartmet :
{
tools :
{
grid :
{

content-server :
{
  ######  Source content server.
  
  ior     = "$(CORBA_CONTENT_SERVER_IOR)"
 
  processing-log :
  {
    enabled      = false
    file         = "/dev/stdout"
#    file         = "$(GRID_ENGINE_LOG_DIR)/contentServer_processing.log"
    maxSize      = 100000000
    truncateSize = 20000000
  }
  
  debug-log :
  {
    enabled      = false
    file         = "/dev/stdout"
#    file         = "$(GRID_ENGINE_LOG_DIR)/contentServer_debug.log"
    maxSize      = 100000000
    truncateSize = 20000000
  }
}



data-server :
{
  ######  Source data server.
  
  ior     = "$(CORBA_DATA_SERVER_IOR)"

  processing-log :
  {
    enabled      = false
    file         = "/dev/stdout"
#    file         = "$(GRID_ENGINE_LOG_DIR)/dataServer_processing.log"
    maxSize      = 100000000
    truncateSize = 20000000
  }
  
  debug-log :
  {
    enabled      = false
    file         = "/dev/stdout"
#    file         = "$(GRID_ENGINE_LOG_DIR)/dataServer_debug.log"
    maxSize      = 100000000
    truncateSize = 20000000
  }
}


generateFmigFiles :
{ 
  parameterFile = "%(DIR)/parameters_mfig.cfg"
  targetDir = "$(HOME)/Disk/Grib"
  producerPrefix = "X"
  
  content-storage  : 
  {
    # Is the new generated FMIG file information stored into the content server.
    
    enabled        = true
    
    # Content storage type (redis/corba/http)
    
    type = "redis"

    redis :
    {
      address      = "$(REDIS_CONTENT_SERVER_ADDRESS)"
      port         = $(REDIS_CONTENT_SERVER_PORT)
      tablePrefix  = "$(REDIS_CONTENT_SERVER_TABLE_PREFIX)"
    }
    
    corba :
    {
      ior          = "$(CORBA_CONTENT_SERVER_IOR)"
    }

    http :
    {
      url          = "$(HTTP_CONTENT_SERVER_URL)"
    }    
  }
 
  debug-log :
  {
    enabled      = true
    file         = "/dev/stdout"
#    file         = "$(GRID_ENGINE_LOG_DIR)/generateFmigFiles_debug.log"
    maxSize      = 100000000
    truncateSize = 20000000
  }
}

}
}
}
